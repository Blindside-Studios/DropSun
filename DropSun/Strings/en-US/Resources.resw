<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApparentTemperatureString" xml:space="preserve">
    <value>Feels like {0}{1}</value>
    <comment>The apparent temperature in the overview widget; 0 is the temperature, 1 is the unit (°)</comment>
  </data>
  <data name="GeneralWidgetHumidityTextBlock.Text" xml:space="preserve">
    <value>Humidity</value>
    <comment>The header for the humidity display in the overview widget</comment>
  </data>
  <data name="GlobalSearchBox.PlaceholderText" xml:space="preserve">
    <value>Type here to add a location...</value>
    <comment>The placeholder text in the location search box</comment>
  </data>
  <data name="SettingsGeneralUnitsGetFromSystemRegion.Content" xml:space="preserve">
    <value>Get From System</value>
    <comment>The option to click when the user wants their measurement system inferred from Windows region settings</comment>
  </data>
  <data name="SettingsGeneralUnitsHeader.Text" xml:space="preserve">
    <value>Preferred Measurement System</value>
    <comment>The header over the options for the measurement systems</comment>
  </data>
  <data name="SettingsGeneralUnitsImperial.Content" xml:space="preserve">
    <value>Imperial</value>
    <comment>The option to click when the user wants their measurement system to be imperial.</comment>
  </data>
  <data name="SettingsGeneralUnitsMetric.Content" xml:space="preserve">
    <value>Metric</value>
    <comment>The option to click when the user wants their measurement system to be  metric.</comment>
  </data>
  <data name="SettingsSidebarAbout.Text" xml:space="preserve">
    <value>About</value>
    <comment>Determines the item text for the about tab in the settings sidebar</comment>
  </data>
  <data name="SettingsSidebarGeneral.Text" xml:space="preserve">
    <value>General</value>
    <comment>Determines the item text for the general tab in the settings sidebar</comment>
  </data>
  <data name="SettingsSidebarHeader.Text" xml:space="preserve">
    <value>Settings</value>
    <comment>The header in the settings sidebar</comment>
  </data>
  <data name="SettingsSidebarVisual.Text" xml:space="preserve">
    <value>Visual &amp; Performance</value>
    <comment>Determines the item text for the visuals tab in the settings sidebar, responsible for animations, etc.</comment>
  </data>
  <data name="SettingsVisualAccessibilityHeader.Text" xml:space="preserve">
    <value>Accessibility</value>
    <comment>Accessibility header in visual settings</comment>
  </data>
  <data name="SettingsVisualDisableSidebarRippleToggle.Header" xml:space="preserve">
    <value>Disable the ripple effect in the sidebar</value>
    <comment>The toggle in visual settings that allows users to disable the ripple effect in the sidebar when adding or moving items.</comment>
  </data>
  <data name="SettingsVisualInteractionsBouncyRadioButton.Content" xml:space="preserve">
    <value>Bouncy</value>
    <comment>The option to make the sun bouncy</comment>
  </data>
  <data name="SettingsVisualInteractionsHeader.Text" xml:space="preserve">
    <value>How Should The Interactive Sun Feel?</value>
    <comment>The header over the buttons that lets users choose whether the sun is to be interactive and if so, if it is to be bouncy or not.</comment>
  </data>
  <data name="SettingsVisualInteractionsOffRadioButton.Content" xml:space="preserve">
    <value>Not Interactive</value>
    <comment>The option to set the sun to not be interactive.</comment>
  </data>
  <data name="SettingsVisualInteractionsSlowRadioButton.Content" xml:space="preserve">
    <value>Gentle</value>
    <comment>The option to make sun movement gentle</comment>
  </data>
  <data name="SettingsVisualPerformanceAndEnergyHeader.Text" xml:space="preserve">
    <value>Performance and Resource Management</value>
    <comment>The header for the performance section</comment>
  </data>
  <data name="SettingsVisualPowerSaverToggle.Header" xml:space="preserve">
    <value>Save Energy by reducing complex rendering effects</value>
    <comment>The text next to the power saver toggle in performance and energy settings</comment>
  </data>
  <data name="SettingsVisualReduceLightningFlashToggle.Header" xml:space="preserve">
    <value>Reduce flashing during lightning strikes</value>
    <comment>The accessibility option to reduce flashes during lightning strikes in settings to prevent epileptic seizures.</comment>
  </data>
  <data name="TitleBar.Text" xml:space="preserve">
    <value>DropSun</value>
    <comment>App name - only for translation into different character sets</comment>
  </data>
  <data name="Weather/HighLowMinimal" xml:space="preserve">
    <value>H: {0}{1}</value>
    <comment>0 is the highest temperature, 1 is the unit.</comment>
  </data>
  <data name="Weather/HighLowShort" xml:space="preserve">
    <value>H: {0}{2}  L: {1}{2}</value>
    <comment>0 is the highest temperature, 1 is the lowest and 2 is the unit in which the temperature is measured.</comment>
  </data>
  <data name="Weather/TempDailyHighestShort" xml:space="preserve">
    <value>H: {0}{1}</value>
    <comment>Used in the overview card to indicate the highest temperature of the day</comment>
  </data>
  <data name="Weather/TempDailyLowestShort" xml:space="preserve">
    <value>L: {0}{1}</value>
    <comment>Used in the overview card to show the lowest temperature of the day.</comment>
  </data>
  <data name="WindSpeed10MTextBlock.Text" xml:space="preserve">
    <value>Wind Speed</value>
    <comment>The label for the display of the wind speed, measured at a height of 10m above the ground. The 10m label is to be omitted usually in favor of saving space.</comment>
  </data>
</root>