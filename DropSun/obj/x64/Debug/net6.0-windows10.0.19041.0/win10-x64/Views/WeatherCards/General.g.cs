#pragma checksum "C:\Users\nicol\OneDrive\Documents\GitHub\DropSun\DropSun\Views\WeatherCards\General.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "822F49FA74D476F57405927DE49BBC0BF803FAC79DB828366A25A5B769F92B05"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DropSun.Views.WeatherCards
{
    partial class General : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class General_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGeneral_Bindings
        {
            private global::DropSun.Views.WeatherCards.General dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj2;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj3;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2TextDisabled = false;
            private static bool isobj3TextDisabled = false;

            private General_obj1_BindingsTracking bindingsTracking;

            public General_obj1_Bindings()
            {
                this.bindingsTracking = new General_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 15 && columnNumber == 24)
                {
                    isobj2TextDisabled = true;
                }
                else if (lineNumber == 16 && columnNumber == 24)
                {
                    isobj3TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\WeatherCards\General.xaml line 15
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 3: // Views\WeatherCards\General.xaml line 16
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IGeneral_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::DropSun.Views.WeatherCards.General>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DropSun.Views.WeatherCards.General obj, int phase)
            {
                this.Update_DropSun_Model_ViewModels_WeatherState_Instance(global::DropSun.Model.ViewModels.WeatherState.Instance, phase);
            }
            private void Update_DropSun_Model_ViewModels_WeatherState_Instance(global::DropSun.Model.ViewModels.WeatherState obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_DropSun_Model_ViewModels_WeatherState_Instance(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DropSun_Model_ViewModels_WeatherState_Instance_ConditionDescription(obj.ConditionDescription, phase);
                        this.Update_DropSun_Model_ViewModels_WeatherState_Instance_TemperatureString(obj.TemperatureString, phase);
                    }
                }
            }
            private void Update_DropSun_Model_ViewModels_WeatherState_Instance_ConditionDescription(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\WeatherCards\General.xaml line 15
                    if (!isobj2TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj2, obj, null);
                    }
                }
            }
            private void Update_DropSun_Model_ViewModels_WeatherState_Instance_TemperatureString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\WeatherCards\General.xaml line 16
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class General_obj1_BindingsTracking
            {
                private global::System.WeakReference<General_obj1_Bindings> weakRefToBindingObj; 

                public General_obj1_BindingsTracking(General_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<General_obj1_Bindings>(obj);
                }

                public General_obj1_Bindings TryGetBindingObject()
                {
                    General_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_DropSun_Model_ViewModels_WeatherState_Instance(null);
                }

                public void PropertyChanged_DropSun_Model_ViewModels_WeatherState_Instance(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    General_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DropSun.Model.ViewModels.WeatherState obj = sender as global::DropSun.Model.ViewModels.WeatherState;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_DropSun_Model_ViewModels_WeatherState_Instance_ConditionDescription(obj.ConditionDescription, DATA_CHANGED);
                                bindings.Update_DropSun_Model_ViewModels_WeatherState_Instance_TemperatureString(obj.TemperatureString, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ConditionDescription":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DropSun_Model_ViewModels_WeatherState_Instance_ConditionDescription(obj.ConditionDescription, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TemperatureString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DropSun_Model_ViewModels_WeatherState_Instance_TemperatureString(obj.TemperatureString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::DropSun.Model.ViewModels.WeatherState cache_DropSun_Model_ViewModels_WeatherState_Instance = null;
                public void UpdateChildListeners_DropSun_Model_ViewModels_WeatherState_Instance(global::DropSun.Model.ViewModels.WeatherState obj)
                {
                    if (obj != cache_DropSun_Model_ViewModels_WeatherState_Instance)
                    {
                        if (cache_DropSun_Model_ViewModels_WeatherState_Instance != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_DropSun_Model_ViewModels_WeatherState_Instance).PropertyChanged -= PropertyChanged_DropSun_Model_ViewModels_WeatherState_Instance;
                            cache_DropSun_Model_ViewModels_WeatherState_Instance = null;
                        }
                        if (obj != null)
                        {
                            cache_DropSun_Model_ViewModels_WeatherState_Instance = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_DropSun_Model_ViewModels_WeatherState_Instance;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\WeatherCards\General.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    General_obj1_Bindings bindings = new General_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

